import{_ as a,r as t,o,c,d,f as i}from"./app-ed0390b9.js";const n={},l=i('<p>CanvasItem 是二维空间中所有对象的抽象基类。</p><div class="custom-container warning"><p class="custom-container-title">CanvasItem API</p><h4 id="继承关系" tabindex="-1"><a class="header-anchor" href="#继承关系" aria-hidden="true">#</a> 继承关系</h4><p>Object &gt; Node &gt; CanvasItem</p><h3 id="常用属性" tabindex="-1"><a class="header-anchor" href="#常用属性" aria-hidden="true">#</a> 常用属性</h3><ul><li><code>visible</code> 是否可见。</li><li><code>modulate</code> 可以调节任何节点的颜色和透明度，并影响子节点的画布颜色。</li><li><code>self_modulate</code> 和 modulate 属性一样，但不会影响子节点的画布颜色。</li><li><code>texture_filter</code> 设置画布中纹理的过滤模式</li><li><code>texture_repeat</code> 设置画布中纹理的平铺模式</li></ul><h4 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法" aria-hidden="true">#</a> 常用方法</h4><ul><li><code>get_global_mouse_position()</code> 获取当前图层中的鼠标位置。</li></ul></div>',2);function r(s,h){const e=t("PageHeader");return o(),c("div",null,[d(e,{content:"CanvasItem 画布抽象类"}),l])}const m=a(n,[["render",r],["__file","canvasItem.html.vue"]]);export{m as default};
