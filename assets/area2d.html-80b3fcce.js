import{_ as a,r as o,o as d,c,d as t,f as r}from"./app-ed0390b9.js";const i={},n=r('<div class="custom-container tip"><p class="custom-container-title">Area2D 节点是什么?</p><p>Area2D 是 Godot 的内置节点类型。它可以创建一个用于检查<code>物理对象（或其他区域）</code>是否<code>进入（或退出）</code>的 2D 区域。</p><p>不过，需要注意的是，Area2D 实例对象<strong>本身没有任何意义，在游戏中它也是不显示</strong>，往往需要配合其他节点配置一起使用，例如<code>CollisionShape2D 定义区域形状</code>。</p></div><div class="custom-container warning"><p class="custom-container-title">Area2D API</p><h4 id="继承关系" tabindex="-1"><a class="header-anchor" href="#继承关系" aria-hidden="true">#</a> 继承关系</h4><p>Object &gt; Node &gt; CanvasItem &gt; Node2D &gt; CollisionObject2D &gt; Area2D</p><h4 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h4><ul><li><code>monitoring</code> 是否开启区域检测，默认为<code>true</code>。</li></ul><h4 id="内置信号" tabindex="-1"><a class="header-anchor" href="#内置信号" aria-hidden="true">#</a> 内置信号</h4><ul><li><code>area_entered(area: Area2D)</code> 有其他区域进行此区域时发出。</li><li><code>area_exited(area: Area2D)</code> 有其他区域离开此区域时发出。</li><li><code>body_entered(body: Node2D)</code> 有物体<code>例如，PhysicsBody2D、TileMap</code>进入此区域时发出。</li><li><code>body_exited(body: Node2D)</code> 有物体<code>例如，PhysicsBody2D、TileMap</code>离开此区域时发出。</li></ul></div>',2);function s(l,h){const e=o("PageHeader");return d(),c("div",null,[t(e,{content:"Area2D 类"}),n])}const _=a(i,[["render",s],["__file","area2d.html.vue"]]);export{_ as default};
