import{_ as s,r as l,o as d,c as r,d as o,a as e,w as c,b as t,f as a}from"./app-ed0390b9.js";const u={},_=e("h1",{id:"ui-用户界面",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ui-用户界面","aria-hidden":"true"},"#"),t(" UI 用户界面")],-1),h=e("p",null,"在 Godot 中，用户界面（UI）用于创建和设计游戏的用户界面元素，如按钮、文本标签、滑块等，以便玩家与游戏进行交互。",-1),m={class:"custom-container danger"},p=e("p",{class:"custom-container-title"},"常见问题",-1),f=a('<div class="custom-container tip"><p class="custom-container-title">UI 用户界面 - 知识体系</p><ul><li><strong>画布：</strong><ul><li><code>CanvasLayer 节点</code> 画布层 <code>默认图层索引为 -1</code></li></ul></li><li><strong>显示内容：</strong><ul><li><code>Label 节点</code> 用于显示文本</li><li><code>TextureRect 节点</code> 用于显示图像</li><li><code>VideoStreamPlayer 节点</code> 用于播放视频</li><li><code>Button 节点</code> 普通按钮</li><li><strong>进度条：</strong><ul><li><code>ProgressBar 节点</code> 普通进度条</li><li><code>TextureProgress 节点</code> 纹理进度条</li></ul></li></ul></li><li><strong>布局：</strong><ul><li><code>Control 节点</code> 用于其他节点的父级容器</li><li><code>HBoxContainer 节点</code> 水平排列子节点</li><li><code>VBoxContainer 节点</code> 垂直排列子节点</li><li><code>GridContainer 节点</code> 网格排列子节点</li><li><code>MarginContainer 节点</code> 添加边距的容器</li></ul></li></ul></div>',1);function g(x,C){const n=l("BasicConcept"),i=l("RouterLink");return d(),r("div",null,[_,h,o(n,{data:[{title:"锚点 Anchor",content:"用于控制节点位置和大小。"},{title:"容器 Container",content:"容器可以包含多个子节点，以便控制它们的位置。"},{title:"布局 Layout",content:"是指控件节点在在界面中的排列方式。"}]}),e("div",m,[p,e("ul",null,[e("li",null,[o(i,{to:"/ui/reuse-font-theme.html"},{default:c(()=>[t("在 Godot 游戏中，如何复用文字主题预设？")]),_:1})]),e("li",null,[o(i,{to:"/ui/set_ui_node_color.html"},{default:c(()=>[t("如何给 UI 节点设置颜色？")]),_:1})])])]),f])}const v=s(u,[["render",g],["__file","index.html.vue"]]);export{v as default};
