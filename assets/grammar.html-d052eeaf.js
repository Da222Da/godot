import{_ as c,r as e,o as l,c as i,d as s,a as n,w as t,b as p,f as u}from"./app-ed0390b9.js";const r={},k=n("p",null,"我们可以通过以下的几个方面，快速地了解 Godot 的语法约定：",-1),d={class:"table-of-contents"},m=u(`<h2 id="_1-数据类型" tabindex="-1"><a class="header-anchor" href="#_1-数据类型" aria-hidden="true">#</a> 1.数据类型</h2><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">var</span> my_integer <span class="token operator">=</span> <span class="token number">42</span> <span class="token comment"># 整数</span>
<span class="token keyword">var</span> my_float <span class="token operator">=</span> <span class="token number">3.14</span> <span class="token comment"># 浮点数</span>
<span class="token keyword">var</span> my_string <span class="token operator">=</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token comment"># 字符串</span>
<span class="token keyword">var</span> is_true <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment"># 布尔值</span>
<span class="token keyword">var</span> my_array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token comment"># 数组</span>
<span class="token keyword">var</span> my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span> <span class="token comment"># 字典</span>

<span class="token comment"># 枚举</span>
<span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
    <span class="token constant">UP</span><span class="token punctuation">,</span>
    <span class="token constant">DOWN</span><span class="token punctuation">,</span>
    <span class="token constant">LEFT</span><span class="token punctuation">,</span>
    <span class="token constant">RIGHT</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token comment"># 枚举，相当于声明常量</span>
<span class="token comment"># const UP = 0</span>
<span class="token comment"># const DOWN = 1</span>
<span class="token comment"># const LEFT = 2</span>
<span class="token comment"># const RIGHT = -1</span>

<span class="token keyword">var</span> my_direction <span class="token operator">=</span> Direction<span class="token punctuation">.</span><span class="token constant">UP</span>

<span class="token comment"># 向量</span>
<span class="token keyword">var</span> my_vector2 <span class="token operator">=</span> <span class="token function">Vector2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token comment"># 二维向量</span>
<span class="token keyword">var</span> my_vector3 <span class="token operator">=</span> <span class="token function">Vector3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span>  <span class="token comment"># 三维向量</span>

<span class="token comment"># 颜色</span>
<span class="token keyword">var</span> my_color <span class="token operator">=</span> <span class="token function">Color</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-变量" tabindex="-1"><a class="header-anchor" href="#_2-变量" aria-hidden="true">#</a> 2.变量</h2><p>在 Godot 中，变量可以存储任何类型的数据，并且可以在程序运行时更改其值。</p><h3 id="_2-1-变量声明" tabindex="-1"><a class="header-anchor" href="#_2-1-变量声明" aria-hidden="true">#</a> 2-1.变量声明</h3><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token comment"># 动态类型声明</span>
<span class="token keyword">var</span> my_var <span class="token operator">=</span> <span class="token number">15</span>
my_var <span class="token operator">=</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token comment"># 动态类型声明允许在变量声明后更改其类型</span>

<span class="token comment"># 静态类型声明</span>
<span class="token keyword">var</span> num<span class="token punctuation">:</span><span class="token class-name">int</span> <span class="token operator">=</span> <span class="token number">15</span>
<span class="token keyword">var</span> num <span class="token operator">:=</span> <span class="token number">15</span> <span class="token comment"># 类型推断，自动推断变量类型</span>

<span class="token comment"># 常量声明</span>
<span class="token keyword">const</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">:</span><span class="token class-name">int</span> <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment"># 常量值在声明后不能被修改</span>

<span class="token comment"># 局部变量声明</span>
<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">var</span> my_local_var <span class="token operator">=</span> <span class="token number">15</span> <span class="token comment"># 局部变量只能在函数或方法内部使用</span>
    <span class="token function">print</span><span class="token punctuation">(</span>my_local_var<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-变量操作" tabindex="-1"><a class="header-anchor" href="#_2-2-变量操作" aria-hidden="true">#</a> 2-2. 变量操作</h3><p>在 Godot 中，运算符用于执行算术、比较、逻辑、赋值等操作：</p><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment"># 算术运算符：加法\`+\`、减法\`-\`、乘法\`*\`、除法\`/\`、取余数\`%\`</span>
<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># 加法 3</span>
	<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token comment"># 减法 -1</span>
	<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span> <span class="token comment"># 乘法 2</span>
	<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span> <span class="token comment"># 除法 0.5</span>
	<span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">%</span> b<span class="token punctuation">)</span> <span class="token comment"># 取余数 1</span>

<span class="token comment"># 关系运算符：等于\`==\`、不等于\`!=\`、大于\`&gt;\`、小于\`&lt;\`、大于等于\`&gt;=\`、小于等于\`&lt;=\`</span>
<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;是否相等: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;是否不相等: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token operator">!=</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;是否大于: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;是否小于: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;是否大于等于: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;是否小于等于: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 逻辑运算符：与\`and\` 或\`or\` 非\`not\`</span>
<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 与 b: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token keyword">and</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 或 b: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span>a <span class="token keyword">or</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;非 a: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span><span class="token keyword">not</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;非 b: &quot;</span> <span class="token operator">+</span> <span class="token function">str</span><span class="token punctuation">(</span><span class="token keyword">not</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 赋值运算符：等号\`=\`、加等号\`+=\`、减等号\`-=\`、乘等号\`*=\`、除等号\`/=\`</span>
<span class="token keyword">func</span> <span class="token function">_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">5</span>  <span class="token comment"># 使用赋值运算符 &quot;=&quot; 将值 5 赋给变量 x</span>
    <span class="token keyword">var</span> y <span class="token operator">:=</span> x  <span class="token comment"># 使用赋值运算符 &quot;:=&quot; 将变量 x 的值赋给变量 y</span>
    <span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 相当于 x = x + 5</span>
    <span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">-=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 相当于 x = x - 5</span>
    <span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">*=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 相当于 x = x * 5</span>
    <span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">/=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 相当于 x = x / 5</span>

<span class="token comment"># 字符串运算符</span>
<span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> <span class="token string">&quot;Godot&quot;</span> <span class="token comment"># 连接</span>
<span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token string">&quot;My name is %s&quot;</span> <span class="token operator">%</span> <span class="token string">&#39;zhangsan&#39;</span> <span class="token comment"># 插入</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-逻辑语句" tabindex="-1"><a class="header-anchor" href="#_3-逻辑语句" aria-hidden="true">#</a> 3.逻辑语句</h2><h3 id="_3-1-条件语句" tabindex="-1"><a class="header-anchor" href="#_3-1-条件语句" aria-hidden="true">#</a> 3-1.条件语句</h3><p>在 Godot 中，条件语句主要包括 <code>if-elif-else</code> 语句，以及 <code>match</code> 语句。这些条件语句用于根据不同条件执行相应的代码块。</p><p>示例代码如下：</p><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token number">10</span>

<span class="token keyword">if</span> number <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;小于 10&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> number <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;等于 10&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;大于 10&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">var</span> state <span class="token operator">=</span> <span class="token string">&quot;running&quot;</span>

<span class="token keyword">match</span> state<span class="token punctuation">:</span>
    <span class="token string">&quot;idle&quot;</span><span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;角色静止&quot;</span><span class="token punctuation">)</span>
    <span class="token string">&quot;running&quot;</span><span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;角色奔跑&quot;</span><span class="token punctuation">)</span>
    <span class="token string">&quot;jumping&quot;</span><span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;角色跳跃&quot;</span><span class="token punctuation">)</span>
    _<span class="token punctuation">:</span>
        <span class="token comment"># _用作默认或“其他”情况，当没有其他分支匹配时执行。</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;未知状态&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-循环语句" tabindex="-1"><a class="header-anchor" href="#_3-2-循环语句" aria-hidden="true">#</a> 3-2.循环语句</h3><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token comment"># 使用for循环打印数字1到5</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># while循环</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        i <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">continue</span> <span class="token comment"># 跳过本次循环，继续下一次循环</span>
           <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span> <span class="token comment"># 跳出循环</span>
    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-函数" tabindex="-1"><a class="header-anchor" href="#_4-函数" aria-hidden="true">#</a> 4.函数</h2><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token comment"># 定义函数</span>
<span class="token keyword">func</span> <span class="token function">fn</span><span class="token punctuation">(</span>bool<span class="token punctuation">:</span> <span class="token class-name">boolean</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">void</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> bool<span class="token punctuation">:</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Yes&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># 调用函数</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-类" tabindex="-1"><a class="header-anchor" href="#_5-类" aria-hidden="true">#</a> 5.类</h2><div class="custom-container warning"><p class="custom-container-title">注意！</p><p>每一个 GDScript 脚本文件本身一个“类”，这意味着你在文件范围内声明的所有内容(例如变量和函数)都是类定义的一部分。</p></div><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">extends</span> <span class="token class-name">Node</span> <span class="token comment"># 继承</span>

<span class="token keyword">class_name</span> <span class="token class-name">MyClass</span> <span class="token comment"># 命名</span>

<span class="token keyword">var</span> my_property <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment"># 类的属性</span>

<span class="token comment"># 类的方法</span>
<span class="token keyword">func</span> <span class="token function">my_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello from MyClass!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function v(b,g){const o=e("PageHeader"),a=e("router-link");return l(),i("div",null,[s(o,{content:"Godot 的语法约定"}),k,n("nav",d,[n("ul",null,[n("li",null,[s(a,{to:"#_1-数据类型"},{default:t(()=>[p("1.数据类型")]),_:1})]),n("li",null,[s(a,{to:"#_2-变量"},{default:t(()=>[p("2.变量")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#_2-1-变量声明"},{default:t(()=>[p("2-1.变量声明")]),_:1})]),n("li",null,[s(a,{to:"#_2-2-变量操作"},{default:t(()=>[p("2-2. 变量操作")]),_:1})])])]),n("li",null,[s(a,{to:"#_3-逻辑语句"},{default:t(()=>[p("3.逻辑语句")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#_3-1-条件语句"},{default:t(()=>[p("3-1.条件语句")]),_:1})]),n("li",null,[s(a,{to:"#_3-2-循环语句"},{default:t(()=>[p("3-2.循环语句")]),_:1})])])]),n("li",null,[s(a,{to:"#_4-函数"},{default:t(()=>[p("4.函数")]),_:1})]),n("li",null,[s(a,{to:"#_5-类"},{default:t(()=>[p("5.类")]),_:1})])])]),m])}const _=c(r,[["render",v],["__file","grammar.html.vue"]]);export{_ as default};
