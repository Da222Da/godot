import{_ as d,r as o,o as n,c as a,d as i,e as s,a as e,w as r,b as l,f as u}from"./app-ed0390b9.js";const _={},m=e("h1",{id:"_2d-图形",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2d-图形","aria-hidden":"true"},"#"),l(" 2D 图形")],-1),g=e("p",null,"在 Godot 中，二维图形是指由平面上的点、线和形状组成的图像。在游戏开发中，二维图形通常用于创建 2D 游戏，如平台游戏、射击游戏、拼图游戏等。",-1),p=e("p",null,"通过在 2D 节点上设置属性、应用动画和物理效果，您可以实现二维图形的移动、旋转、缩放和碰撞检测等操作。Godot 还提供了丰富的 2D 绘图工具和函数，使您能够绘制形状、绘制文本、创建粒子效果等，以实现各种视觉效果和交互功能。",-1),D={class:"custom-container danger"},h=e("p",{class:"custom-container-title"},"常见问题：",-1),f=u('<div class="custom-container tip"><p class="custom-container-title">2D 图形 - 知识结构</p><ul><li><strong>CanvasItem 抽象类</strong><ul><li><code>visible</code> 是否可见</li><li><code>z_index</code> 设置节点在 Z 轴上的顺序</li><li><code>modulate</code> 设置节点颜色</li></ul></li><li><strong>Node2D 节点</strong><ul><li><code>Position</code> 设置节点在 2D 空间中的位置</li><li><code>Rotation</code> 设置节点在 2D 空间中的旋转角度</li><li><code>Scale</code> 设置节点在 2D 空间中的缩放比例</li></ul></li><li><strong>Sprite2D 显示 2D 图像</strong><ul><li><code>texture 属性</code> 加载你要绘制的纹理资源</li><li><code>filp_h</code> 如果为 true, 纹理水平翻转</li><li><code>filp_v</code> 如果为 true, 纹理垂直翻转</li><li><strong>animation 动画</strong><ul><li><code>hframes 属性</code> 精灵表中的列数。</li><li><code>vframes 属性</code> 精灵表中的行数。</li><li><code>frame 属性</code> 当前显示的精灵表中的帧。</li></ul></li><li><strong>region 编辑图片的显示区域</strong><ul><li><code>region_enabled</code> 是否从较大的图集纹理中裁剪纹理。</li><li><code>region_rect</code> 设置裁剪纹理的区域。</li></ul></li></ul></li><li><strong>TileMap 瓦片地图</strong><ul><li><code>tile_set 属性</code> 指定瓦片集资源 <ul><li><code>physics layers</code> 给瓦片设置物理层与遮罩层</li><li><code>tile_size</code> 获取图块的尺寸大小</li></ul></li><li><code>layers 属性</code> 添加地图层级</li><li><code>get_used_rect() 函数</code> 返回包围地图的矩形信息<code>Rect2i[position, Rect, end]</code></li></ul></li><li><strong>Camera2D 摄像机</strong><ul><li><code>Zoom 视图缩放</code>可以放大或缩小相机视图中的内容。</li><li><code>Offset 相对偏移量</code> 用于更改相机中心位置。</li><li><code>Limits 限制</code> 用于控制摄像机拍摄的范围。 <ul><li><code>left &amp; right &amp; top &amp; bottom</code> 极限值<code>(相机会在抵达该值时停止移动)</code></li><li><code>limit_smoothed</code> 碰到极限值的时候，开启平滑过渡效果。</li></ul></li><li><code>Position Smoothing 位置平滑</code> 可以给摄像机添加平滑过渡的效果<code>慢慢加速、慢慢停下</code>。 <ul><li><code>position-smoothing-enabled</code> 是否启用过渡效果</li><li><code>position-smoothing-speed</code> 设置平滑速度</li></ul></li><li><code>Drag</code> 角色自由活动区域设置<code>在该区域内移动，相机不会跟随角色</code><ul><li><code>drag-horizontal-enabled</code> 是否开启水平方向上活动区域</li><li><code>drag-vertical-enabled</code> 是否开启垂直方向上活动区域</li></ul></li><li><code>Editor</code> 编辑器矩形 <ul><li><code>editor_draw_screen</code>如果为 true，编辑器绘制相机拍摄范围的矩形。</li><li><code>editor_draw_limits</code> 如果为 true，编辑器绘制相机拍摄范围的极限矩形。</li><li><code>editor_draw_drag_margin</code> 如果为 true，编辑器绘制不移动相机的自由范围矩形。</li></ul></li><li><code>reset_smoothing() 函数</code> 取消位置平滑效果，直接设置为目标位置。</li></ul></li><li><strong>RayCast2D 射线</strong><ul><li><code>is_colliding()</code> 是否有对象与射线的向量相交</li></ul></li></ul></div>',1);function v(x,C){const t=o("BasicConcept"),c=o("RouterLink");return n(),a("div",null,[m,g,p,i(t,{data:[{title:"CanvasItem 抽象类",content:"2D 空间中所有对象的抽象类，具有Visibility 可见性、Ordering 排序、Texture 纹理和 Material 材质属性 。"},{title:"Node2D 节点",content:"2D 游戏对象，被所有 2D 节点继承。"},{title:"Sprite2D 节点",content:"用于显示 2D 图像。具有位置、旋转、缩放和纹理属性。"},{title:"AnimationSprite2D 节点",content:"专门用于播放动画帧。"},{title:"TileMap 瓦片地图节点",content:"帮助我们快速地创建、并管理 2D 游戏地图。"},{title:"Camera2D 摄像机节点",content:"摄像机的拍摄区域，就是游戏的可视区域。"},{title:"RayCast2D 射线节点",content:"2D 空间中的射线，用于查找第一个相交的 CollisionObject2D。"}]}),s(` -   [ParallaxBackground 视差背景](../nodes/parallaxbackground.md)
-   [Marker2D 标记特殊位置](../nodes/marker2d.md) `),e("div",D,[h,e("ul",null,[e("li",null,[i(c,{to:"/2D-graphics/vector2.html"},{default:r(()=>[l("什么是二维向量及其运算方式?")]),_:1})])])]),f])}const k=d(_,[["render",v],["__file","index.html.vue"]]);export{k as default};
