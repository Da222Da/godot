import{_ as s,r as a,o as t,c as e,d as o,f as p}from"./app-ed0390b9.js";const c={},i=p(`<p>Input 单例类，用于检测和响应各种输入事件，示例代码如下：</p><div class="language-gdscript line-numbers-mode" data-ext="gdscript"><pre class="language-gdscript"><code><span class="token keyword">func</span> <span class="token function">_process</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">is_action_just_pressed</span><span class="token punctuation">(</span><span class="token string">&quot;dialogic_default_action&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">var</span> mouse_position <span class="token operator">=</span> <span class="token function">get_global_mouse_position</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">var</span> tween <span class="token operator">=</span> <span class="token function">get_tree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create_tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		tween<span class="token punctuation">.</span><span class="token function">tween_property</span><span class="token punctuation">(</span>$<span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;position&quot;</span><span class="token punctuation">,</span> mouse_position<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Godot 相关 API</p><h4 id="继承关系" tabindex="-1"><a class="header-anchor" href="#继承关系" aria-hidden="true">#</a> 继承关系：</h4><p>Object &gt; Input</p><h4 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h4><ul><li><code>is_action_pressed(action_name)</code> : 检测某一按钮是否被按下(长按有效)。</li><li><code>is_action_just_pressed(action_name)</code> : 检测某一按钮是否被按下(仅触发一次)。</li><li><code>get_axis(-a, +a)</code>:通过指定两个动作来获取轴的输入，一个是负的，一个是正的。</li><li><code>get_vector(-x, +x, -y, +y)</code>:通过指定正负 X 和 Y 轴的四个动作来获取输入向量。</li></ul></div>`,3);function u(l,r){const n=a("PageHeader");return t(),e("div",null,[o(n,{content:"Input 单例类: 用于检测和响应各种输入事件"}),i])}const k=s(c,[["render",u],["__file","input.html.vue"]]);export{k as default};
