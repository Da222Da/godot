import{_ as e,r as l,o as i,c as n,d as c,f as s}from"./app-ed0390b9.js";const t={},a=s('<div class="custom-container tip"><p class="custom-container-title">CollisionShape2D 是干什么的？</p><p>在 Godot 中，我们可以使用 CollisionShape2D 类来定义 2D 物体的几何形状。这些形状可以是简单的几何体，如盒子、球体、胶囊体，也可以是复杂的自定义形状。</p></div><div class="custom-container danger"><p class="custom-container-title">为什么要给物体添加碰撞形状呢？</p><p>在 Godot 中，只有添加了碰撞形状的物体，才能与其他物体进行交互。</p></div><div class="custom-container warning"><p class="custom-container-title">CollisionShape2D API</p><ul><li><p><strong>CollisionShape2D</strong> 用于描述 2D 空间物体碰撞形状。</p><ul><li><strong>shape 属性：</strong><ul><li><code>CapsuleShape</code> 胶囊形状</li><li><code>CircleShape</code> 圆形形状</li><li><code>ConvexPolygonShape</code> 凸多边形形状</li><li><code>RectangleShape</code> 矩形形状</li><li><code>TriangleShape</code> 三角形形状</li></ul></li></ul></li><li><p><strong>CollisionPolygon2D</strong> 定义 2D 碰撞多边形。</p></li></ul></div>',3);function p(r,d){const o=l("PageHeader");return i(),n("div",null,[c(o,{content:"CollisionShape2D 类"}),a])}const h=e(t,[["render",p],["__file","collisionshape2d.html.vue"]]);export{h as default};
